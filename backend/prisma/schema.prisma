// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id           String     @id @default(cuid())
  code         String     @unique
  title        String
  status       PollStatus @default(ACTIVE)
  createdAt    DateTime   @default(now())
  questions    Question[]
  participants User[]
}

model Question {
  id        String         @id @default(cuid())
  text      String
  timer     Int
  status    QuestionStatus @default(PENDING)
  poll      Poll           @relation(fields: [pollId], references: [id])
  pollId    String
  options   Option[]
  answers   Answer[]
  createdAt DateTime       @default(now())
}

model Option {
  id         String   @id @default(cuid())
  text       String
  isCorrect  Boolean  @default(false)
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  answers    Answer[]
}

model User {
  id        String   @id @default(cuid())
  username  String
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  createdAt DateTime @default(now())
  Answer    Answer[]
}

model Answer {
  id         String   @id @default(cuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  option     Option   @relation(fields: [optionId], references: [id])
  optionId   String
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

enum PollStatus {
  ACTIVE
  CLOSED
}

enum QuestionStatus {
  PENDING
  ACTIVE
  CLOSED
}
