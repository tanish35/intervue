generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id           String     @id @default(cuid())
  code         String     @unique
  title        String
  status       PollStatus @default(ACTIVE)
  createdAt    DateTime   @default(now())
  questions    Question[]
  participants PollUser[]
  creator      User       @relation(fields: [creatorId], references: [id])
  creatorId    String
}

model Question {
  id        String         @id @default(cuid())
  text      String
  timer     Int
  status    QuestionStatus @default(PENDING)
  poll      Poll           @relation(fields: [pollId], references: [id])
  pollId    String
  options   Option[]
  answers   Answer[]
  createdAt DateTime       @default(now())
}

model Option {
  id         String   @id @default(cuid())
  text       String
  isCorrect  Boolean  @default(false)
  question   Question @relation(fields: [questionId], references: [id])
  questionId String
  answers    Answer[]
}

model User {
  id        String     @id @default(cuid())
  username  String     @unique
  polls     PollUser[]
  createdAt DateTime   @default(now())
  Answer    Answer[]
  Poll      Poll[]
}

model PollUser {
  id String @id @default(cuid())

  user      User     @relation(fields: [userId], references: [id])
  userId    String
  poll      Poll     @relation(fields: [pollId], references: [id])
  pollId    String
  createdAt DateTime @default(now())

  @@unique([userId, pollId])
}

model Answer {
  id String @id @default(cuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  option   Option @relation(fields: [optionId], references: [id])
  optionId String

  question   Question @relation(fields: [questionId], references: [id])
  questionId String
}

enum PollStatus {
  ACTIVE
  CLOSED
}

enum QuestionStatus {
  PENDING
  ACTIVE
  CLOSED
}
